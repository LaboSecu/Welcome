{"version":3,"sources":["components/Overlay/Overlay.js","components/Popups/EmailErrorPopup.js","actions/actionTypes.js","Regexes.js","components/FormUserInfo/Form.js","actions/index.js","components/Challenge/FormChallenge/Form.js","components/Popups/ErrorPopup.js","components/Challenge/Welcome/Welcometext.js","components/Challenge/Challenge.js","components/ChallengeValidated/ChallengeValidated.js","App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["Overlay","react_default","a","createElement","id","EmailErrorPopup","className","this","props","togglePopup","errorMessage","Component","connect","state","errorMessages","emailInputError","toggles","emailErrorPopup","UPDATE_PASSWORD_INPUT","UPDATE_USER_INPUT","TOGGLE_ERROR_POPUP","TOGGLE_EMAIL_ERROR_POPUP","TOGGLE_USER_EMAIL_FORM","SET_INPUT_EMAIL_FORM_ERROR","VALIDATE_CHALLENGE","emailRegex","ynovRegex","UserForm","checkEmail","test","_this","userEmail","setErrorMessage","submit","_callee","event","errorCode","regenerator_default","wrap","_context","prev","next","sent","toggleEmailErrorPopup","toggleUserEmailForm","stop","_this2","autoFocus","type","value","onChange","e","updateUserEmail","target","onKeyPress","key","onClick","components_Popups_EmailErrorPopup","user","userInputEmail","errorPopupDisplayed","dispatch","inputData","payload","updateUserInput","setEmailFormError","bool","credential","Form","password","popupDisplayed","atob","validateChallenge","toggleErrorPopup","setTimeout","updatePassword","ErrorPopup","Welcometext","FormChallenge_Form","components_Popups_ErrorPopup","Challenge","userMailFormDisplayed","components_Overlay_Overlay","FormUserInfo_Form","Welcome_Welcometext","userEmailFormDisplayed","ChallengeValidated","style","height","background","src","alt","controls","autoPlay","display","App","challengeValidated","components_ChallengeValidated_ChallengeValidated","components_Challenge_Challenge","challenge","reducers","combineReducers","arguments","length","undefined","action","Object","objectSpread","Boolean","window","location","hostname","match","devTools","devToolsExtension","store","createStore","portalApp","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+ZASeA,SANC,kBACZC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,4CCCNC,0LAEE,OACIJ,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,KAAKC,MAAMC,YAAc,yBAA2B,4BAC/DF,KAAKC,MAAME,qBAJEC,cAefC,cALS,SAACC,GAAD,MAAY,CAChCH,aAAcG,EAAMC,cAAcC,gBAClCN,YAAaI,EAAMG,QAAQC,kBAGhBL,CAAyBP,GCpB3Ba,SAAwB,yBACxBC,EAAoB,oBACpBC,EAAqB,qBACrBC,EAA2B,2BAC3BC,EAAyB,yBACzBC,EAA6B,6BAC7BC,EAAqB,qBCN3B,IAAMC,EAAa,6EACbC,EAAY,oDCSnBC,6MAEFC,WAAa,WACT,OAA8C,IAA1CH,EAAWI,KAAKC,EAAKtB,MAAMuB,YAC3BD,EAAKtB,MAAMwB,iBAAiB,IACpB,IAEoC,IAAzCN,EAAUG,KAAKC,EAAKtB,MAAMuB,YACzBD,EAAKtB,MAAMwB,iBAAiB,IACpB,GAGT,KAGXC,6CAAS,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAC,EAAAnC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACiBX,EAAKF,aADtB,WAGa,KAFdQ,EADCG,EAAAG,QAGiC,IAAfN,EAHlB,CAAAG,EAAAE,KAAA,QAIDX,EAAKtB,MAAMmC,uBAAsB,GAJhCJ,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,EAMKX,EAAKtB,MAAMoC,sBANhB,OAODd,EAAKtB,MAAMmC,uBAAsB,GAPhC,yBAAAJ,EAAAM,SAAAX,EAAA3B,uIAaD,IAAAuC,EAAAvC,KACJ,OACIN,EAAAC,EAAAC,cAAA,OAAKC,GAAI,oBACLH,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,SAAO4C,WAAW,EAAMC,KAAM,QAASC,MAAO1C,KAAKC,MAAMuB,UAAWmB,SAAU,SAACC,GAAD,OAAOL,EAAKtC,MAAM4C,gBAAgBD,EAAEE,OAAOJ,QAAQK,WAAY,SAACH,GAAoB,UAAVA,EAAEI,KAAiBT,EAAKb,YAChLhC,EAAAC,EAAAC,cAAA,UAAQG,UAAW,gBAAiBkD,QAASjD,KAAK0B,QAAlD,UACAhC,EAAAC,EAAAC,cAACsD,EAAD,cAlCO9C,aAqDRC,cAbS,SAACC,GAAD,MAAY,CAChCkB,UAAWlB,EAAM6C,KAAKC,eACtBjD,aAAcG,EAAMC,cAAcC,gBAClC6C,oBAAqB/C,EAAMG,QAAQC,kBAGZ,SAAA4C,GAAQ,MAAK,CACpCT,gBAAiB,SAAAU,GAAS,OAAID,EC9C3B,SAAyBC,GAC5B,MAAO,CACHd,KAAM7B,EACN4C,QAASD,GD2C0BE,CAAgBF,KACvD9B,gBAAiB,SAAAI,GAAS,OAAIyB,ECpB3B,SAA2BzB,GAC9B,IAAI1B,EACJ,OAAQ0B,GACJ,KAAM,EACF1B,EAAe,gDACf,MACJ,KAAM,EACFA,EAAe,kEACf,MACJ,QACIA,EAAe,GAGvB,MAAM,CACFsC,KAAMzB,EACNwC,QAASrD,GDK0BuD,CAAkB7B,KACzDQ,oBAAsB,kBAAMiB,EC1BtB,CACFb,KAAM1B,KD0BVqB,sBAAuB,SAAAuB,GAAI,OAAIL,ECnC5B,SAA+BK,GAClC,MAAM,CACFlB,KAAM3B,EACN0C,QAASG,GDgC2BvB,CAAsBuB,OAGnDtD,CAA6Ce,GExDtDwC,eAAa,gBAEbC,6MAEFvD,MAAQ,CACJwD,SAAU,GACVC,gBAAgB,KAGpBrC,4BAAS,SAAAC,IAAA,OAAAG,EAAAnC,EAAAoC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACJX,EAAKtB,MAAM6D,SAASpB,QAAUsB,KAAKJ,GAD/B,CAAA5B,EAAAE,KAAA,QAGHX,EAAKtB,MAAMgE,oBAHRjC,EAAAE,KAAA,sBAAAF,EAAAE,KAAA,EAKGX,EAAKtB,MAAMiE,kBAAiB,GAL/B,OAMHC,WAAW,kBAAM5C,EAAKtB,MAAMiE,kBAAiB,IAAQ,KANlD,wBAAAlC,EAAAM,SAAAX,EAAA3B,iFAUD,IAAAuC,EAAAvC,KACJ,OACIN,EAAAC,EAAAC,cAAA,OAAKC,GAAG,eACJH,EAAAC,EAAAC,cAAA,KAAGG,UAAU,eAAb,cACAL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,gBAAb,oBACAL,EAAAC,EAAAC,cAAA,OAAKC,GAAG,oBACJH,EAAAC,EAAAC,cAAA,SAAO4C,WAAW,EAAMC,KAAK,WAAWE,SAAU,SAACC,GAAD,OAAOL,EAAKtC,MAAMmE,eAAexB,EAAEE,OAAOJ,QAAQK,WAAY,SAACH,GAAoB,UAAVA,EAAEI,KAAiBT,EAAKb,YACnJhC,EAAAC,EAAAC,cAAA,UAAQqD,QAASjD,KAAK0B,QAAQhC,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iCAxB5CK,aAyCJC,cAVS,SAACC,GAAD,MAAY,CAChCwD,SAAUxD,EAAMwD,WAGO,SAAAR,GAAQ,MAAK,CACpCc,eAAgB,SAAAN,GAAQ,OAAMR,ED1CxB,CACFb,KAAM9B,EACN6C,QAAS,CACLd,MCuCmDoB,MAC3DI,iBAAkB,SAAAP,GAAI,OAAIL,ED5BvB,SAA0BK,GAC7B,MAAM,CACFlB,KAAM5B,EACN2C,QAASG,GCyBsBO,CAAiBP,KACpDM,kBAAmB,kBAAMX,EDWnB,CACFb,KAAMxB,OCTCZ,CAA6CwD,GC7CtDQ,0LAEG,OACI3E,EAAAC,EAAAC,cAAA,OAAKG,UAAWC,KAAKC,MAAMC,YAAc,sBAAwB,yBAAjE,+CAHYE,cAcVC,cAJS,SAACC,GAAD,MAAY,CAChCJ,YAAaI,EAAMG,QAAQ4C,sBAGhBhD,CAAyBgE,GCAzBC,EAbK,kBAChB5E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BACXL,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,QAAMC,GAAG,mBAAT,WACAH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACXL,EAAAC,EAAAC,cAAA,mLACAF,EAAAC,EAAAC,cAAA,2JAEJF,EAAAC,EAAAC,cAAC2E,EAAD,MACA7E,EAAAC,EAAAC,cAAC4E,EAAD,QCPFC,mLAEE,OACI/E,EAAAC,EAAAC,cAAA,WACKI,KAAKC,MAAMyE,sBACRhF,EAAAC,EAAAC,cAAC+E,EAAD,MACA,KACH3E,KAAKC,MAAMyE,sBACRhF,EAAAC,EAAAC,cAACgF,EAAD,MACA,KACJlF,EAAAC,EAAAC,cAACiF,EAAD,MACAnF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UAAf,qEAXQK,aAuBTC,cAJS,SAACC,GAAD,MAAY,CAChCoE,sBAAuBpE,EAAMG,QAAQqE,yBAG1BzE,CAAyBoE,GCpBzBM,SARY,kBACvBrF,EAAAC,EAAAC,cAAA,OAAKoF,MAAO,CAACC,OAAU,OAAQC,WAAc,YACzCxF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SAASoF,IAAI,aAAaC,IAAI,oBAC7C1F,EAAAC,EAAAC,cAAA,OAAKG,UAAW,cAAhB,kDACAL,EAAAC,EAAAC,cAAA,SAAOuF,IAAI,UAAUE,UAAQ,EAACC,UAAQ,EAACN,MAAO,CAACO,QAAW,aCC5DC,0LAEF,OACE9F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACTC,KAAKC,MAAMwF,mBAAsB/F,EAAAC,EAAAC,cAAC8F,EAAD,MAA0BhG,EAAAC,EAAAC,cAAC+F,EAAD,cAJrDvF,cAeHC,cALS,SAACC,GAAD,MAAY,CAChCoE,sBAAuBpE,EAAMG,QAAQqE,uBACrCW,mBAAoBnF,EAAMsF,UAAUH,qBAGzBpF,CAAyBmF,UC0DxC,IAQeK,EAREC,YAAgB,CAC7BhC,SAjDJ,WAAqD,IAA5BxD,EAA4ByF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApB,CAACrD,MAAO,IAAKwD,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOzD,MACX,KAAK9B,EACD,OAAOwF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEIoC,MAAOwD,EAAO1C,QAAQd,QAE9B,QACI,OAAOpC,IA0CfG,QAxEJ,WAAoH,IAAnGH,EAAmGyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3F,CAAC1C,qBAAqB,EAAOyB,wBAAwB,EAAMpE,iBAAiB,GAAQwF,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChH,OAAQC,EAAOzD,MACX,KAAK5B,EACD,OAAOsF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEI+C,oBAAqB6C,EAAO1C,UAEpC,KAAKzC,EACD,OAAOoF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEIwE,wBAAwB,IAEhC,KAAKhE,EACD,OAAOqF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEII,gBAAiBwF,EAAO1C,UAEhC,QACI,OAAOlD,IAuDf6C,KAvCJ,WAA0D,IAArC7C,EAAqCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B,CAAC3C,eAAgB,IAAK8C,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQC,EAAOzD,MACX,KAAK7B,EACD,OAAOuF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEI8C,eAAgB8C,EAAO1C,UAE/B,QACI,OAAOlD,IAgCfC,cA5BJ,WAAiE,IAAtCD,EAAsCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9B,CAACvF,gBAAiB,IAAK0F,EAAOH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOzD,MACX,KAAKzB,EACD,OAAOmF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEIE,gBAAiB0F,EAAO1C,UAEhC,QACI,OAAOlD,IAqBfsF,UAjBJ,WAAsE,IAA5CtF,EAA4CyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAApC,CAACN,oBAAoB,GACnD,QADkEM,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACnDxD,MACX,KAAKxB,EACD,OAAOkF,OAAAC,EAAA,EAAAD,CAAA,GACA7F,EADP,CAEImF,oBAAoB,IAE5B,QACI,OAAOnF,MCnEC+F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCLN,IACMC,EAAWJ,OAAOK,mBAAqBL,OAAOK,oBAC9CC,EAAQC,YAAYC,EAFL,GAE8BJ,GAEnDK,IAASC,OACLtH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUL,MAAOA,GACblH,EAAAC,EAAAC,cAACsH,EAAD,OAEJC,SAASC,eAAe,SDsGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.90522234.chunk.js","sourcesContent":["import React from \"react\"\nimport './Overlay.css'\n\nconst Overlay = () => (\n    <div id=\"overlay-grey\">\n\n    </div>\n);\n\nexport default Overlay;","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\";\n\nimport './EmailErrorPopup.css'\n\nclass EmailErrorPopup extends Component {\n    render(){\n        return(\n            <div className={this.props.togglePopup ? \"dropDown-popup-visible\" : \"dropDown-popup-invisible\"}>\n                {this.props.errorMessage}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    errorMessage: state.errorMessages.emailInputError,\n    togglePopup: state.toggles.emailErrorPopup\n});\n\nexport default connect(mapStateToProps)(EmailErrorPopup)","export const UPDATE_PASSWORD_INPUT = \"UPDATE_PASSWORD_INPUT\";\nexport const UPDATE_USER_INPUT = \"UPDATE_USER_INPUT\";\nexport const TOGGLE_ERROR_POPUP = \"TOGGLE_ERROR_POPUP\";\nexport const TOGGLE_EMAIL_ERROR_POPUP = \"TOGGLE_EMAIL_ERROR_POPUP\";\nexport const TOGGLE_USER_EMAIL_FORM = \"TOGGLE_USER_EMAIL_FORM\";\nexport const SET_INPUT_EMAIL_FORM_ERROR = \"SET_INPUT_EMAIL_FORM_ERROR\";\nexport const VALIDATE_CHALLENGE = \"VALIDATE_CHALLENGE\";\n\n","export const emailRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)$/i;\nexport const ynovRegex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@ynov.com$/;","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\"\n\nimport EmailErrorPopup from \"../Popups/EmailErrorPopup\"\n\nimport './UserForm.css';\n\nimport {updateUserInput, toggleUserEmailForm, setEmailFormError, toggleEmailErrorPopup} from \"../../actions\";\nimport {emailRegex, ynovRegex} from \"../../Regexes\";\n\nclass UserForm extends Component {\n\n    checkEmail = () => {\n        if (emailRegex.test(this.props.userEmail) === false){\n            this.props.setErrorMessage(-1);\n            return -1\n        }else{\n            if(ynovRegex.test(this.props.userEmail) === false){\n                this.props.setErrorMessage(-2);\n                return -2\n            }\n        }\n        return 0;\n    };\n\n    submit = async (event) => {\n        let errorCode = await this.checkEmail();\n\n        if(errorCode === -1 || errorCode === -2) {\n            this.props.toggleEmailErrorPopup(true)\n        }else {\n            await this.props.toggleUserEmailForm();\n            this.props.toggleEmailErrorPopup(false);\n        }\n    };\n\n\n\n    render(){\n        return(\n            <div id={\"userForm-wrapper\"}>\n                <p>Before starting the challenge, please enter your YNOV email address</p>\n                <input autoFocus={true} type={\"email\"} value={this.props.userEmail} onChange={(e) => this.props.updateUserEmail(e.target.value)} onKeyPress={(e) => {if(e.key === \"Enter\"){this.submit()}}}/>\n                <button className={\"submit-button\"} onClick={this.submit}>Submit</button>\n                <EmailErrorPopup/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userEmail: state.user.userInputEmail,\n    errorMessage: state.errorMessages.emailInputError,\n    errorPopupDisplayed: state.toggles.emailErrorPopup\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updateUserEmail: inputData => dispatch(updateUserInput(inputData)),\n    setErrorMessage: errorCode => dispatch(setEmailFormError(errorCode)),\n    toggleUserEmailForm : () => dispatch(toggleUserEmailForm()),\n    toggleEmailErrorPopup: bool => dispatch(toggleEmailErrorPopup(bool))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserForm);","import {VALIDATE_CHALLENGE, TOGGLE_EMAIL_ERROR_POPUP, TOGGLE_ERROR_POPUP, UPDATE_PASSWORD_INPUT, UPDATE_USER_INPUT, TOGGLE_USER_EMAIL_FORM, SET_INPUT_EMAIL_FORM_ERROR} from \"./actionTypes\"\n\nexport function updatePasswordInput(value){\n    return{\n        type: UPDATE_PASSWORD_INPUT,\n        payload: {\n            value\n        }\n    }\n}\n\nexport function updateUserInput(inputData){\n    return {\n        type: UPDATE_USER_INPUT,\n        payload: inputData\n    }\n}\n\nexport function toggleErrorPopup(bool){\n    return{\n        type: TOGGLE_ERROR_POPUP,\n        payload: bool\n    }\n}\n\nexport function toggleEmailErrorPopup(bool){\n    return{\n        type: TOGGLE_EMAIL_ERROR_POPUP,\n        payload: bool\n    }\n}\n\nexport function toggleUserEmailForm(){\n    return{\n        type: TOGGLE_USER_EMAIL_FORM\n    }\n}\n\nexport function setEmailFormError(errorCode){\n    let errorMessage;\n    switch (errorCode) {\n        case -1:\n            errorMessage = \"The provided email address' format is invalid\";\n            break;\n        case -2:\n            errorMessage = \"The provided email address is not part of the YNOV organisation\";\n            break;\n        default:\n            errorMessage = \"\";\n            break;\n    }\n    return{\n        type: SET_INPUT_EMAIL_FORM_ERROR,\n        payload: errorMessage\n    }\n}\n\nexport function validateChallenge(){\n    return{\n        type: VALIDATE_CHALLENGE\n    }\n}\n","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\n\nimport {updatePasswordInput, toggleErrorPopup, validateChallenge} from \"../../../actions/index\"\n\nimport './form.css'\n\nconst credential = \"c2VrdXJpdGF5\";\n\nclass Form extends Component{\n\n    state = {\n        password: \"\",\n        popupDisplayed: false\n    };\n\n    submit = async () => {\n      if(this.props.password.value === atob(credential))\n      {\n          this.props.validateChallenge();\n      }else{\n          await this.props.toggleErrorPopup(true);\n          setTimeout(() => this.props.toggleErrorPopup(false), 5000);\n      }\n    };\n\n    render(){\n        return(\n            <div id=\"answer-form\">\n                <p className=\"darker-text\">Validation</p>\n                <p className=\"lighter-text\">Enter Password :</p>\n                <div id=\"input-submit-row\">\n                    <input autoFocus={true} type=\"password\" onChange={(e) => this.props.updatePassword(e.target.value)} onKeyPress={(e) => {if(e.key === \"Enter\"){this.submit()}}}/>\n                    <button onClick={this.submit}><i className=\"fas fa-angle-right\"/></button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    password: state.password\n});\n\nconst mapDispatchToProps = dispatch => ({\n    updatePassword: password =>   dispatch(updatePasswordInput(password)),\n    toggleErrorPopup: bool => dispatch(toggleErrorPopup(bool)),\n    validateChallenge: () => dispatch(validateChallenge())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form)","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\";\n\nimport './ErrorPopup.css'\n\nclass ErrorPopup extends Component {\n     render(){\n         return(\n             <div className={this.props.togglePopup ? \"faded-popup-visible\" : \"faded-popup-invisible\"}>\n                 Password Incorrect. Please try again\n             </div>\n         );\n     }\n}\n\nconst mapStateToProps = (state) => ({\n    togglePopup: state.toggles.errorPopupDisplayed\n});\n\nexport default connect(mapStateToProps)(ErrorPopup)","import React from 'react';\nimport './index.css';\n\nimport Form from '../FormChallenge/Form';\nimport ErrorPopup from '../../Popups/ErrorPopup';\n\nconst Welcometext = () => (\n    <div className=\"black-background-container\">\n        <h1>Welcome on this first Security Lab Challenge</h1>\n        <span id=\"challenge-title\">Chall 0</span>\n        <div className=\"colored-text-container\">\n            <p>If you really want to join, you will have to prove yourself worthy. We want to test your ability to research about what you don't know and use what you actually know.</p>\n            <p>For this challenge, nothing complicated. You just have to find a password. You don't need any special tool, your navigator will do the trick.</p>\n        </div>\n        <Form/>\n        <ErrorPopup/>\n    </div>\n);\n\nexport default Welcometext;","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\n\nimport Overlay from \"../Overlay/Overlay\";\nimport UserForm from \"../FormUserInfo/Form\";\nimport Welcometext from \"./Welcome/Welcometext\";\n\n\nclass Challenge extends Component{\n    render(){\n        return(\n            <div>\n                {this.props.userMailFormDisplayed ? (\n                    <Overlay/>\n                ) : null}\n                {this.props.userMailFormDisplayed ? (\n                    <UserForm/>\n                ) : null}\n                <Welcometext/>\n                <div className=\"github\">\n                    Check out our github: https://github.com/LaboSecu/Welcome\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    userMailFormDisplayed: state.toggles.userEmailFormDisplayed\n});\n\nexport default connect(mapStateToProps)(Challenge)","import React from \"react\"\nimport './ChallengeValidated.css'\n\nconst ChallengeValidated = () => (\n    <div style={{\"height\": \"100%\", \"background\": \"#0c0c0c\"}}>\n        <img className=\"hacker\" src=\"hacker.gif\" alt=\"the-real-hacker\"/>\n        <div className={\"invitation\"}>Invitation to join Security Lab has been sent </div>\n        <audio src=\"mac.mp3\" controls autoPlay style={{\"display\": \"none\"}}/>\n    </div>\n);\n\nexport default ChallengeValidated","import React, { Component } from 'react';\nimport {connect} from \"react-redux\"\n\nimport Challenge from \"./components/Challenge/Challenge\"\nimport ChallengeValidated from \"./components/ChallengeValidated/ChallengeValidated\"\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          { this.props.challengeValidated ? (<ChallengeValidated/>) : (<Challenge/>)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    userMailFormDisplayed: state.toggles.userEmailFormDisplayed,\n    challengeValidated: state.challenge.challengeValidated\n});\n\nexport default connect(mapStateToProps)(App);\n","import {\n    TOGGLE_EMAIL_ERROR_POPUP,\n    TOGGLE_ERROR_POPUP,\n    UPDATE_PASSWORD_INPUT,\n    UPDATE_USER_INPUT,\n    TOGGLE_USER_EMAIL_FORM,\n    SET_INPUT_EMAIL_FORM_ERROR,\n    VALIDATE_CHALLENGE\n} from \"../actions/actionTypes\"\nimport {combineReducers} from \"redux\"\n\nfunction toggles(state = {errorPopupDisplayed: false, userEmailFormDisplayed: true, emailErrorPopup: false}, action){\n    switch (action.type) {\n        case TOGGLE_ERROR_POPUP:\n            return {\n                ...state,\n                errorPopupDisplayed: action.payload\n            };\n        case TOGGLE_USER_EMAIL_FORM:\n            return {\n                ...state,\n                userEmailFormDisplayed: false\n            };\n        case TOGGLE_EMAIL_ERROR_POPUP:\n            return {\n                ...state,\n                emailErrorPopup: action.payload\n            };\n        default:\n            return state\n    }\n}\n\nfunction passwordReducer(state = {value: \"\"}, action){\n    switch (action.type) {\n        case UPDATE_PASSWORD_INPUT:\n            return {\n                ...state,\n                value: action.payload.value\n            };\n        default:\n            return state\n    }\n}\n\nfunction userReducer(state = {userInputEmail: \"\"}, action){\n    switch (action.type){\n        case UPDATE_USER_INPUT:\n            return {\n                ...state,\n                userInputEmail: action.payload\n            };\n        default:\n            return state\n    }\n}\n\nfunction errorCodesReducer(state = {emailInputError: \"\"}, action){\n    switch (action.type) {\n        case SET_INPUT_EMAIL_FORM_ERROR:\n            return {\n                ...state,\n                emailInputError: action.payload\n            };\n        default:\n            return state\n    }\n}\n\nfunction challengeReducer(state = {challengeValidated: false}, action){\n    switch (action.type) {\n        case VALIDATE_CHALLENGE:\n            return {\n                ...state,\n                challengeValidated: true\n            };\n        default:\n            return state\n    }\n}\n\nconst reducers = combineReducers({\n    password: passwordReducer,\n    toggles: toggles,\n    user: userReducer,\n    errorMessages: errorCodesReducer,\n    challenge: challengeReducer\n});\n\nexport default reducers","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from \"redux\"\nimport {Provider} from \"react-redux\"\n\nimport './index.css';\nimport App from './App';\nimport portalApp from \"./reducers/index\"\n\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {};\nconst devTools = window.devToolsExtension && window.devToolsExtension();\nconst store = createStore(portalApp, initialState, devTools);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}